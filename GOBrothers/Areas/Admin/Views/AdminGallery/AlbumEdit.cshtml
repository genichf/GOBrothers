@model GOBrothers.Domain.Entities.Album

@{
    ViewBag.Title = "Редагувати/додати";
}

@if (Model.Id == 0)
{ <h4 style="color:#808080">Створення нового альбома</h4> }
else { <h4><span style="color:#808080">Редагування альбома - </span>@Model.Name</h4>}

@using (Html.BeginForm("AlbumEdit", "AdminGallery", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <p>@Html.TextBoxFor(Model => Model.Id, new { style = "display: none;" })</p>

    <div class="editor-label">
        @Html.LabelFor(Model => Model.Name, "Назва статті")
    </div>
    <div class="editor-field">
        <p>@Html.TextBoxFor(Model => Model.Name, new { style = "width:500px" })</p>
        @Html.ValidationMessageFor(Model => Model.Name)
    </div>
    if (Model.Id != 0)
    {
        <p>Зображення-логотип альбома</p>
        <div class="logo-image">
            <img src="~/Content/GalleryImages/@Model.Id.ToString()/Logo/logo_small.jpg" alt="Image" />
        </div>
    }

    <div class="editor-label">
        @{
            string visible = "";
            string text = "(Збережеться нова дата)";
            if (Model.Id == 0) { visible = "display: none;"; text = ""; }
            @Html.LabelFor(Model => Model.Created, "Дата попереднього редагування", new { style = visible })
            if (Model.Id == 0)
            { <p style="font-size:9px;">@text</p> }
        }
    </div>
    <div class="editor-field">
        @if (Model.Id == 0)
        {
            <p>@Html.TextBoxFor(Model => Model.Created, new { style = "display: none;" })</p>
        }
        else
        {
            if (Model.Created != null)
            {
                <p>@Html.TextBoxFor(Model => Model.Created, new { Value = Model.Created.Value.ToString("dd.MM.yyyy H:mm:ss"), @readonly = "readonly" })</p>
            }
            else
            {
                <p>@Html.TextBoxFor(Model => Model.Created, new { @readonly = "readonly" })</p>
            }
        }
        @Html.ValidationMessageFor(Model => Model.Created)
    </div>
    
    if (Model.Id != 0)
    {
        <div><p>Завантажити зображення-логотип альбома:</p></div>
        <div id="logo-uploader"><p>You browser doesn't have Flash, Silverlight, Gears, BrowserPlus or HTML5 support.</p></div>
        <div><p>Завантажити кілька зображення для контенту статті:</p></div>
        <div id="uploader"><p>You browser doesn't have Flash, Silverlight, Gears, BrowserPlus or HTML5 support.</p></div>

        // Display images and urls of images
        // for content of post
        <div class="outputimages">
            <p>Зображення в альбомі:</p>
            @foreach (var albumImages in Model.AlbumImages)
            {   string pathToFile = albumImages.RndName;
                string pathToSmallFile = Path.GetFileNameWithoutExtension(albumImages.RndName) + "_small" + Path.GetExtension(albumImages.RndName);
                <img src="~/Content/GalleryImages/@Model.Id.ToString()/@pathToSmallFile" alt="Image" />
            }
        </div>
    }
    <input type="submit" value="Зберегти" />
    <br><br>
    @Html.ActionLink("Відмінити та повернутися", null, null, null, new { href = Request.UrlReferrer })
}

@section Scripts {
    <!-- Binding plupload to id="uploader", script settings and code for working plupload-->
    <script type="text/javascript">
    $(function () {
        $("#logo-uploader").pluploadQueue({
            // General settings
            runtimes: "html5,flash,silverlight,html4",
            url: '@Url.Action("AlbumLogoUpload", "AdminGallery", new { albumId = Model.Id })',
            max_file_size: '10mb',
            chunk_size: '1mb',
            unique_names: true,
            button_browse_hover: true,
            multiple_queues: true,
            dragdrop: true,
            multi_selection: false,
            // Resize images on clientside if we can
            resize: { width: 1024, height: 768, quality: 90, crop: false },
            // Specify what files to browse for
            filters: [
            { title: "Image files", extensions: "jpg,gif,png,jpeg,bmp" },
            { title: "Zip files", extensions: "zip" },
            { title: 'PDF files', extensions: 'pdf' },
            { title: "Excel Files", extensions: "xls,xslx,csv" },
        ],

            // Flash settings
            flash_swf_url: 'Url.Content("~/Scripts/plupload/js/Moxie.swf")',
            // Silverlight settings
            silverlight_xap_url: 'Url.Content("~/Scripts/plupload/js/Moxie.xap")'
        });

        var uploader = $('#logo-uploader').pluploadQueue();
        uploader.bind('UploadComplete', function () {
            location.reload();
        });
    });

    </script>
    <!-- End binding plupload to id="uploader", script settings and code for working plupload-->
    <!-- Binding plupload to id="uploader", script settings and code for working plupload-->
    <script type="text/javascript">
    $(function () {
        $("#uploader").pluploadQueue({
            // General settings
            runtimes: "html5,flash,silverlight,html4",
            url: '@Url.Action("AlbumImageUpload", "AdminGallery", new { albumId = Model.Id })',
            max_file_size: '10mb',
            chunk_size: '1mb',
            unique_names: true,
            button_browse_hover: true,
            multiple_queues: true,
            dragdrop: true,
            // Resize images on clientside if we can
            resize: { width: 1024, height: 768, quality: 90, crop: false },
            // Specify what files to browse for
            filters: [
            { title: "Image files", extensions: "jpg,gif,png,jpeg,bmp" },
            { title: "Zip files", extensions: "zip" },
            { title: 'PDF files', extensions: 'pdf' },
            { title: "Excel Files", extensions: "xls,xslx,csv" },
        ],

            // Flash settings
            flash_swf_url: 'Url.Content("~/Scripts/plupload/js/Moxie.swf")',
            // Silverlight settings
            silverlight_xap_url: 'Url.Content("~/Scripts/plupload/js/Moxie.xap")'
        });

        var uploader = $('#uploader').pluploadQueue();
        uploader.bind('UploadComplete', function () {
            location.reload();
        });
    });
    </script>
    <!-- End binding plupload to id="uploader", script settings and code for working plupload-->
}


